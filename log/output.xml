<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.12.5 on win32)" generated="2025-10-12T23:51:09.942023" rpa="false" schemaversion="5">
<suite id="s1" name="demoDB" source="D:\Automation\Robot Framework\DemoRobotFramework\tests\database\demoDB.robot">
<test id="s1-t1" name="Create Table In SQLite" line="23">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2025-10-12T23:51:10.062768" level="INFO">Looking for configuration file: 'resources\db.cfg'</msg>
<msg time="2025-10-12T23:51:10.069014" level="INFO">Configuration file doesn't exist</msg>
<msg time="2025-10-12T23:51:10.077817" level="INFO">Connect to DB using : sqlite3.connect(database='D:\Automation\Robot Framework\DemoRobotFramework/data/SQLite.db')</msg>
<arg>sqlite3</arg>
<arg>${DBPATH}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2025-10-12T23:51:10.062768" elapsed="0.016067"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-12T23:51:10.078835" level="INFO">${query} = CREATE TABLE IF NOT EXISTS products ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, price REAL, stock INTEGER );</msg>
<var>${query}</var>
<arg>CREATE TABLE IF NOT EXISTS products (</arg>
<arg>id INTEGER PRIMARY KEY AUTOINCREMENT,</arg>
<arg>name TEXT NOT NULL,</arg>
<arg>price REAL,</arg>
<arg>stock INTEGER</arg>
<arg>);</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-12T23:51:10.078835" elapsed="0.000000"/>
</kw>
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2025-10-12T23:51:10.078835" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;CREATE TABLE IF NOT EXISTS products ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, price REAL, stock INTEGER );&lt;/code&gt;</msg>
<msg time="2025-10-12T23:51:10.087915" level="INFO">Commit the transaction</msg>
<arg>${query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2025-10-12T23:51:10.078835" elapsed="0.009080"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2025-10-12T23:51:10.093796" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT name FROM sqlite_master WHERE type='table';&lt;/code&gt;</msg>
<msg time="2025-10-12T23:51:10.093796" level="INFO">Commit the transaction</msg>
<msg time="2025-10-12T23:51:10.094807" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 4 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="color:black; background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: var(--secondary-color, #eee)"&gt;&lt;th scope="row" style="color:black; background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;demo&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope="row" style="color:black; background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;users&lt;/td&gt;&lt;/tr&gt;&lt;tr style="background-color: var(--secondary-color, #eee)"&gt;&lt;th scope="row" style="color:black; background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;sqlite_sequence&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope="row" style="color:black; background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;3&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;products&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2025-10-12T23:51:10.094807" level="INFO">${tables} = [('demo',), ('users',), ('sqlite_sequence',), ('products',)]</msg>
<var>${tables}</var>
<arg>SELECT name FROM sqlite_master WHERE type='table';</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2025-10-12T23:51:10.087915" elapsed="0.006892"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n✅ Các bảng hiện có: ${tables}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-12T23:51:10.096317" elapsed="0.000000"/>
</kw>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2025-10-12T23:51:10.096317" elapsed="0.000000"/>
</kw>
<doc>Tạo bảng mới trong file SQLite local</doc>
<status status="PASS" start="2025-10-12T23:51:10.062768" elapsed="0.033549"/>
</test>
<status status="PASS" start="2025-10-12T23:51:09.970603" elapsed="0.125714"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="demoDB" id="s1" pass="1" fail="0" skip="0">demoDB</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
